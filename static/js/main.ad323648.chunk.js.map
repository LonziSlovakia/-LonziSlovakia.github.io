{"version":3,"sources":["actions/index.js","components/FormComponent.js","components/TaskComponent.js","components/ListComponent.js","components/ColorComponent.js","App.js","reportWebVitals.js","reducers/todos.js","reducers/show.js","reducers/color.js","reducers/index.js","index.js"],"names":["addTodo","text","type","payload","removeTodo","taskId","editTodo","softDeleteTodo","completeTodo","connect","state","color","dispatch","actions","props","useState","task","setTask","onSubmit","e","preventDefault","trim","length","window","alert","handleAddTodo","onChange","target","value","name","className","Task","handleSoftDeleteTask","id","handleDeleteTask","handleCompleteTask","handleEditTask","setState","handleTaskChange","handleSaveTask","taskNameRef","current","editTask","console","log","handleKeyDown","event","key","React","createRef","this","softDeletedClasses","softDeleted","softDeletedIcon","completedClass","completed","focus","ref","autoFocus","onKeyDown","onClick","checked","Component","tasks","todos","List","setShow","show","rewriteShow","showTasks","array","sort","a","b","filter","map","Dropdown","Toggle","drop","Menu","Item","Divider","ColorItem","href","App","handleChangeColor","rewriteColor","areTodosCompleted","undefined","find","x","splnene","variant","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INIT_STATE","action","Math","max","task2","combineReducers","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad323648.chunk.js","sourcesContent":["\r\n//\r\n//  REDUCER: SHOW STATE\r\n//\r\n\r\nexport const addTodo = text => ({\r\n  type: 'ADD_TODO',\r\n  payload: {\r\n    text \r\n  }\r\n})\r\nexport const removeTodo = taskId => ({\r\n  type: 'REMOVE_TODO',\r\n  payload: {\r\n    taskId \r\n  }\r\n})\r\nexport const editTodo = (text,taskId) => ({\r\n  type: 'EDIT_TODO',\r\n  payload: {\r\n    text: text,\r\n    taskId: taskId\r\n  }\r\n})\r\nexport const softDeleteTodo = taskId => ({\r\n  type: 'SOFTDELETE_TODO',\r\n  payload: {\r\n    taskId \r\n  }\r\n})\r\nexport const completeTodo = taskId => ({\r\n  type: 'COMPLETE_TODO',\r\n  payload: {\r\n    taskId \r\n  }\r\n})\r\n\r\n//\r\n//  REDUCER: SHOW STATE\r\n//\r\n\r\nexport const rewriteShow = text => ({\r\n  type: 'REWRITE_SHOW',\r\n  payload: {\r\n    text \r\n  }\r\n})\r\n\r\n//\r\n//  REDUCER: COLOR STATE\r\n//\r\n\r\nexport const rewriteColor = text => ({\r\n  type: 'REWRITE_COLOR',\r\n  payload: {\r\n    text \r\n  }\r\n})\r\n\r\n//\r\n// REDUCER: HEADERTEXT\r\n//\r\n\r\n// export const allComplete = () => ({\r\n//   type: 'ALLCOMPLETE'\r\n// })","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nconst Form = (props) => {\r\n    const { color } = props\r\n    const [task, setTask] = useState('');\r\n    const handleAddTodo = task => {\r\n        if (!task || task.trim().length === 0) {\r\n            window.alert(\"Musíte zadať názov úlohy.\");\r\n            return\r\n        }\r\n        props.addTodo(task);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={(e) => { e.preventDefault(); handleAddTodo(task); setTask('') }}>\r\n            <input onChange={e => setTask(e.target.value)} value={task} name=\"name\" type=\"text\" className={`border-b-2 border-${color}-500 bg-transparent text-${color}-700 focus:outline-none focus:border-${color}-700 text-center`} />\r\n            <input type=\"submit\" value=\"Pridať úlohu\" className={`my-7 mx-2 p-1 border-4 border-${color}-500 text-${color}-900 rounded-lg bg-${color}-300 hover:bg-${color}-400 focus:shadow-inner`} />\r\n        </form>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    color: state.color\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addTodo: text => dispatch(actions.addTodo(text))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Form);","import React from 'react'\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { FiEdit2 } from \"react-icons/fi\";\r\nimport { FiXSquare } from \"react-icons/fi\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nclass Task extends React.Component {\r\n    constructor(task) {\r\n        super();\r\n        this.taskNameRef = React.createRef(null)\r\n        this.state = {\r\n            id: null,\r\n            value: ''\r\n        }\r\n    }\r\n\r\n    handleSoftDeleteTask = (id) => {\r\n        this.props.softDeleteTodo(id);\r\n    }\r\n\r\n    handleDeleteTask = (task) => {\r\n        this.props.removeTodo(task.id);\r\n    }\r\n\r\n    handleCompleteTask = (task) => {\r\n        // this.props.allComplete();\r\n        this.props.completeTodo(this.props.task.id)\r\n    }\r\n\r\n    handleEditTask = (task) => {\r\n        this.setState({ id: this.props.task.id, value: this.props.task.task })\r\n    }\r\n\r\n    handleTaskChange = (value) => {\r\n        this.setState({value: value.target.value })\r\n    }\r\n\r\n    handleSaveTask = () => {\r\n        if (this.taskNameRef.current !== null) {\r\n            const name = this.taskNameRef.current.value\r\n            if (name === '') {\r\n                this.setState({\r\n                    id: null,\r\n                    value: ''\r\n                })\r\n                return\r\n            }\r\n            this.props.editTask(name, this.state.id)\r\n            console.log(name,this.state.id);\r\n            this.taskNameRef.current.value = ''\r\n            this.setState({\r\n                id: null,\r\n                value: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            this.handleSaveTask()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const task = this.props.task\r\n        const softDeletedClasses = task.softDeleted ? `bg-${this.props.color}-100` : `bg-${this.props.color}-300`\r\n        const softDeletedIcon = task.softDeleted ? `bg-red-300 hover:bg-red-400` : `bg-${this.props.color}-300 hover:bg-${this.props.color}-400`\r\n        const completedClass = task.completed ? 'line-through' : ''\r\n\r\n        this.taskNameRef?.current?.focus()\r\n\r\n        if (this.state.id) {\r\n            return (\r\n                <div className={`flex flex-col items-stretch md:items-center md:flex-row bg-${this.props.color}-300 border-b-2 border-t-2 border-${this.props.color}-700`}>\r\n                    <label className=\"flex-1 flex items-center m-1\">\r\n                        <input ref={this.taskNameRef} autoFocus type=\"text\" className={`flex-auto m-2 px-3 py-1 rounded-lg bg-input-dark font-medium text-text-primary placeholder-text-secondary focus:outline-none focus:ring-4 focus:ring-${this.props.color}-700 focus:ring-opacity-50`} value={this.state.value} onChange={this.handleTaskChange} onKeyDown={this.handleKeyDown} />\r\n                    </label>\r\n                    <button className={`rounded-lg px-3 py-1 m-1 font-medium focus:outline-none focus:ring-4 focus:ring-${this.props.color}-700 focus:ring-opacity-50 active:bg-input-dark`} onClick={() => this.handleSaveTask()}>Uložiť zmeny</button>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <li className={`py-1 px-2 border-b-2 border-t-2 border-${this.props.color}-700 text-${this.props.color}-900 ${softDeletedClasses} flex items-center`}>\r\n                <div><input type=\"checkbox\" className={`form-checkbox ml-1 mr-4 mb-1 p-2 rounded focus:outline-none focus:ring-4 focus:ring-${this.props.color}-700 focus:ring-opacity-50`} onChange={() => this.handleCompleteTask(task)} checked={task.completed} /></div>\r\n                <div className={`mr-auto ml-auto break-all ${completedClass}`}>{task.task}</div>\r\n                <div className={`hover:bg-${this.props.color}-400 rounded-lg p-1`} onClick={() => this.handleEditTask(task)}><FiEdit2 /></div>\r\n                <div className={`${softDeletedIcon} rounded-lg p-1`} onClick={() => this.handleSoftDeleteTask(task.id)}><RiDeleteBin6Line /></div>\r\n                <div className={`hover:bg-${this.props.color}-400 rounded-lg p-1`} onClick={() => this.handleDeleteTask(task)}><FiXSquare /></div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    color: state.color,\r\n    tasks: state.todos\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    removeTodo: taskId => dispatch(actions.removeTodo(taskId)),\r\n    softDeleteTodo: taskId => dispatch(actions.softDeleteTodo(taskId)),\r\n    completeTodo: taskId => dispatch(actions.completeTodo(taskId)),\r\n    editTask: (task,taskId) => dispatch(actions.editTodo(task,taskId)),\r\n    // allComplete: () => dispatch(actions.allComplete())\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Task);\r\n\r\n","import React from 'react'\r\nimport Form from './FormComponent'\r\nimport Task from './TaskComponent'\r\nimport { Dropdown } from 'react-bootstrap'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\nclass List extends React.Component {\r\n    setShow = (show) => {\r\n        this.props.rewriteShow(show);\r\n    };\r\n\r\n    showTasks = (show) => {\r\n        let array = this.props.tasks\r\n        array = array.sort(function (a, b) { return (b.completed - a.completed) });\r\n        \r\n\r\n        if (show === \"Úlohy\") {\r\n            return (this.props.tasks.filter(task => !task.completed && !task.softDeleted)).map((task) => <Task key={task.id} task={task} />\r\n            )\r\n        } else if (show === \"Všetky\") {\r\n            return this.props.tasks.map((task) => <Task key={task.id} task={task} />\r\n            )\r\n        } else if (show === \"Splnené\") {\r\n            return (\r\n                this.props.tasks.filter(task => task.completed)).map((task) => <Task key={task.id} task={task} />\r\n                )\r\n        } else if (show === \"Kôš\") {\r\n            return (this.props.tasks.filter(task => task.softDeleted)).map((task) => <Task key={task.id} task={task} />\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <Form />\r\n                <div className=\"mt-8 flex justify-center\">\r\n\r\n                    <div className={`w-1/2 text-2xl bg-${this.props.color}-500 border-4 border-b-2 border-${this.props.color}-700 inline-block`}>\r\n                        <p className={`p-1 border-2 border-b-4 border-${this.props.color}-700 bg-${this.props.color}-400 tracking-wide`}>Úlohy:</p>\r\n                        <ol>\r\n                            {this.showTasks(this.props.show)}\r\n                        </ol>\r\n                    </div>\r\n\r\n                    <Dropdown>\r\n                        <Dropdown.Toggle drop=\"down\" className={`mx-8 py-1 px-2 w-3/5 px-auto text-${this.props.color}-900 border-4 border-${this.props.color}-700 rounded-lg bg-${this.props.color}-300  hover:bg-${this.props.color}-400`}>\r\n                            {this.props.show}\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu className={`block py-1 mt-0.5 px-2 border-4 border-${this.props.color}-500 text-${this.props.color}-900 rounded-lg bg-${this.props.color}-300`}>\r\n                            <Dropdown.Item onClick={() => this.setShow(\"Úlohy\")} className={`block mt-0.5 px-2 text-${this.props.color}-900 rounded-lg bg-${this.props.color}-300 hover:bg-${this.props.color}-400`}>Úlohy</Dropdown.Item>\r\n                            <Dropdown.Divider className=\"mt-0.5 border-b-2 border-black\" />\r\n                            <Dropdown.Item onClick={() => this.setShow(\"Všetky\")} className={`block mt-0.5 px-2 text-${this.props.color}-900 rounded-lg bg-${this.props.color}-300 hover:bg-${this.props.color}-400`}>Všetky</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => this.setShow(\"Splnené\")} className={`block mt-0.5 px-2 text-${this.props.color}-900 rounded-lg bg-${this.props.color}-300 hover:bg-${this.props.color}-400`}>Splnené</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => this.setShow(\"Kôš\")} className={`block mt-0.5 px-2 text-${this.props.color}-900 rounded-lg bg-${this.props.color}-300 hover:bg-${this.props.color}-400`}>Kôš</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    color: state.color,\r\n    show: state.show,\r\n    tasks: state.todos\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addTodo: text => dispatch(actions.addTodo(text)),\r\n    removeTodo: taskId => dispatch(actions.removeTodo(taskId)),\r\n    editTodo: (text, taskId) => dispatch(actions.editTodo(text, taskId)),\r\n    softDeleteTodo: taskId => dispatch(actions.softDeleteTodo(taskId)),\r\n    completeTodo: taskId => dispatch(actions.completeTodo(taskId)),\r\n    rewriteShow: text => dispatch(actions.rewriteShow(text))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(List);","import { Dropdown } from 'react-bootstrap'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nclass ColorItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            color: this.props.color,\r\n            id: this.props.id,\r\n            onClick: this.props.onClick\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { color, id, onClick } = this.state;\r\n        return (\r\n            <div>\r\n                <Dropdown.Item href={`#/color-${id}`} >\r\n                    <div onClick={() => onClick(color)} className={`-ml-2 mt-0.5 px-2 border-4 border-${color}-500 text-${color}-900 rounded-lg bg-${color}-300 hover:bg-${color}-400`}>\r\n                        {color}\r\n                    </div>\r\n                </Dropdown.Item>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    length: state.todos.length\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: text => dispatch(actions.addTodo(text))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ColorItem);\r\n","import React from 'react';\r\nimport { Dropdown } from 'react-bootstrap'\r\nimport List from './components/ListComponent'\r\nimport ColorItem from './components/ColorComponent'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './actions';\r\nclass App extends React.Component {\r\n\r\n  handleChangeColor = (color) => {\r\n    this.props.rewriteColor(color);\r\n  }\r\n\r\n  areTodosCompleted = () => this.props.tasks.find(x => !x.completed) === undefined\r\n  render() {\r\n    const { color } = this.props;\r\n    const splnene = this.areTodosCompleted() ? 'opacity-100 underline' : 'opacity-0'\r\n\r\n    return (\r\n      <div className={`bg-${color}-300 min-h-screen text-center font-robotoslab`}>\r\n        <header className=\"flex justify-around\">\r\n          <div className=\"w-1/4\">\r\n            <Dropdown drop=\"down\">\r\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" className={`my-7 mx-6 p-1 border-4 border-${color}-500 text-${color}-900 rounded-lg bg-${color}-300 hover:bg-${color}-400`}>\r\n                Farba\r\n              </Dropdown.Toggle>\r\n\r\n\r\n              <Dropdown.Menu className=\"mt-2\">\r\n                {['blue', 'red', 'pink', 'yellow', 'green', 'purple', 'gray'].map((color, i) => {\r\n                  return (<ColorItem onClick={() => this.handleChangeColor(color)} color={color} id={i} key={i} />)\r\n                })}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </div>\r\n\r\n          <h1 className={`mx-8 text-${color}-700 font-sansita text-5xl text-center py-4`}>Marekov To-Do-List</h1>\r\n          <h2 className={`mx-8 text-${color}-700 font-sansita text-6xl text-center py-4 pb-24 ${splnene}`}>Paradzinka!</h2>\r\n        </header>\r\n        <List />\r\n        <div className={`w-full bg-${color}-500 h-16 fixed bottom-0 flex place-items-center justify-around`}>&#169; Kormos 2021</div>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  color: state.color,\r\n  tasks: state.todos\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  rewriteColor: text => dispatch(actions.rewriteColor(text))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const INIT_STATE = [{ id: 1, task: 'Úloha v koši', completed: false, softDeleted: true },\r\n{ id: 2, task: 'Splnená Úloha v koši', completed: true, softDeleted: true },\r\n{ id: 3, task: 'Splnená úloha', completed: true, softDeleted: false },\r\n{ id: 4, task: 'Nesplnená úloha', completed: false, softDeleted: false }\r\n]\r\n\r\nconst todos = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TODO':\r\n      let id = Math.max(...state.map((task2) => task2.id)) + 1;\r\n      return [\r\n        ...state,\r\n        {\r\n          id,\r\n          task: action.payload.text,\r\n          completed: false,\r\n          softDeleted: false\r\n        }\r\n      ];\r\n    case 'REMOVE_TODO':\r\n      return state.filter(x => x.id !== action.payload.taskId);\r\n    case 'EDIT_TODO':\r\n      return state.map((task) => {\r\n        if (task.id === action.payload.taskId) {\r\n          return { ...task, task: action.payload.text };\r\n        }\r\n        return task;\r\n      });\r\n    case 'SOFTDELETE_TODO':\r\n      return state.map((task) => {\r\n        if (task.id === action.payload.taskId) {\r\n          return { ...task, softDeleted: !task.softDeleted };\r\n        }\r\n        return task;\r\n      });\r\n    case 'COMPLETE_TODO':\r\n      return state.map((task) => {\r\n        if (task.id === action.payload.taskId) {\r\n          return { ...task, completed: !task.completed };\r\n        }\r\n        return task;\r\n      });\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default todos;","const INIT_STATE = 'Všetky';\r\n\r\nconst show = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'REWRITE_SHOW':\r\n      return action.payload.text\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default show;","const INIT_STATE = 'purple';\r\n\r\nconst color = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'REWRITE_COLOR':\r\n      return action.payload.text\r\n      default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default color;","import { combineReducers } from 'redux';\r\nimport todos from './todos';\r\nimport show from './show'\r\nimport color from './color'\r\n\r\nexport default combineReducers({\r\n  todos,show,color\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}